{
  "id" : "188a1b10-7a93-45b8-88df-36aaa5e5f63c",
  "realm" : "calma",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : true,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "a6fe213e-bae2-4e02-bdb7-3eb3d4585c81",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "188a1b10-7a93-45b8-88df-36aaa5e5f63c",
      "attributes" : { }
    }, {
      "id" : "408232ae-92c2-4740-b717-933e056a041e",
      "name" : "default-roles-calma",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "188a1b10-7a93-45b8-88df-36aaa5e5f63c",
      "attributes" : { }
    }, {
      "id" : "c546a9dc-04ee-42da-95ed-084caaaf722c",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "188a1b10-7a93-45b8-88df-36aaa5e5f63c",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "fd89414e-12f7-4240-bc0a-1fa277adcb67",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "8a435e60-6c83-45ef-8dea-aafc0531cc1d",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "146f02d3-561f-483f-8c42-8d71e22283dd",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "79c3171f-f2fb-4997-a631-d0bf42192efb",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "84525aa0-fd79-48f9-a797-34c95fc2349f",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "597019cc-de13-4807-91e1-1299a205e469",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "77bcbace-1a59-4803-8cee-f7b9f3dcc920",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "57212ffb-769f-4eae-8ab1-ab6033db9cd8",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "a2044072-6423-4616-bd86-035820a4c053",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "c92691cb-8145-421c-8d8c-63a2e64b4143",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "5f9eb77a-09f6-4ebb-8897-04ede96ecef6",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "62499b95-93d0-4dd4-ba7a-5bcb3d8993ab",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "090117d5-584d-4d7f-9494-d3cea2372ee8",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-events", "query-realms", "manage-realm", "query-users", "query-clients", "manage-identity-providers", "view-clients", "create-client", "view-authorization", "manage-users", "impersonation", "manage-authorization", "manage-clients", "view-realm", "view-identity-providers", "query-groups", "manage-events", "view-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "2689eb13-858c-4bba-a2d4-cd672cd63288",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "489f1443-8376-43e6-b71c-94afed97d95b",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "9dd68c40-fd7d-4155-b4fb-b01b548d1e57",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "fc9f80a9-6073-4363-a3ab-c481ce9bdf4e",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "608ebd51-4ce0-40f0-9f4b-3980ce4d01af",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      }, {
        "id" : "ae193a26-9788-4300-a92c-d481c40d1c16",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "bfad8346-2b3d-47f1-8583-2a8e88a3c6b3",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8ad36f2d-ea37-41cb-b07f-50675d6f4869",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "6e8ba58b-1baf-436a-ac3c-1e35bd5abf43",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f9125c57-b18c-402a-a0e5-bcd6a2f886fd",
        "attributes" : { }
      }, {
        "id" : "97336e34-cc28-43ea-af6f-5e2468876e57",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "f9125c57-b18c-402a-a0e5-bcd6a2f886fd",
        "attributes" : { }
      }, {
        "id" : "9e5ff8c5-0140-4d6b-ae92-6b36b406be4f",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f9125c57-b18c-402a-a0e5-bcd6a2f886fd",
        "attributes" : { }
      }, {
        "id" : "60a6597f-f86c-468b-9c6c-36d77afac394",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f9125c57-b18c-402a-a0e5-bcd6a2f886fd",
        "attributes" : { }
      }, {
        "id" : "15f70a68-0fff-4b4b-a13f-6c8347a2e735",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f9125c57-b18c-402a-a0e5-bcd6a2f886fd",
        "attributes" : { }
      }, {
        "id" : "71f174e7-88f7-4314-bf7d-ec59c1c27b42",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f9125c57-b18c-402a-a0e5-bcd6a2f886fd",
        "attributes" : { }
      }, {
        "id" : "352cd973-121d-4499-b6f2-9a72952d1077",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "f9125c57-b18c-402a-a0e5-bcd6a2f886fd",
        "attributes" : { }
      }, {
        "id" : "c857d45c-37d5-4454-837a-4813a9fba3eb",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f9125c57-b18c-402a-a0e5-bcd6a2f886fd",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "408232ae-92c2-4740-b717-933e056a041e",
    "name" : "default-roles-calma",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "188a1b10-7a93-45b8-88df-36aaa5e5f63c"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "Yes",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "required",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "d17cdd48-3f64-4fe4-9045-64be813118d8",
    "username" : "backend@calma.com",
    "firstName" : "Backend",
    "lastName" : "Calma",
    "email" : "backend@calma.com",
    "emailVerified" : true,
    "enabled" : true,
    "createdTimestamp" : 1759727438081,
    "totp" : false,
    "credentials" : [ {
      "id" : "6fa2423a-0531-4235-b7ff-6bde13e87f75",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1759727455667,
      "secretData" : "{\"value\":\"jViZgGUt0700LelGDtKih3/I5H4D8T+ZAfgUxVOZ+s4=\",\"salt\":\"zwZ5gNcTfQJoU2JDL+E63A==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-calma" ],
    "clientRoles" : {
      "realm-management" : [ "manage-users" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "f9125c57-b18c-402a-a0e5-bcd6a2f886fd",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/calma/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/calma/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "731d0e88-b950-4092-ac87-804b1d492704",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/calma/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/calma/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "0d03b97d-1f8c-4ce4-bf08-469b500e89c9",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "5cd8d966-e453-481f-a8cd-246602ac5175",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "8ad36f2d-ea37-41cb-b07f-50675d6f4869",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "bc7969b6-11cd-40d3-bfe9-f80c73db8c0f",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "62a9fc22-1ccd-4a60-8074-fad4ee18b799",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/calma/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/calma/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "25245bec-09d4-47da-9e17-d11e5896355c",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "662a7017-7195-4e90-a2df-1b06d2ff4438",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "690f3d57-8fb1-4200-a047-fb569fad6d93",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "a054a0c4-d2d1-4c95-a13b-c41895d88e53",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "3b50b9f3-66c0-4795-9417-a44b2e0e185d",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "67d89420-610a-4d0d-90e8-b44e06977c91",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "c3ff58f4-7bb1-4871-a549-3ed33737cfad",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "ea38d77a-52c4-4272-82de-564e39657d7b",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "04b2761e-0319-4a62-8255-896b3a6d4030",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "89301ae6-a5e9-4b1f-a1fb-8806576db42f",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "adc09199-13ce-41ca-9ee8-78b7239429e6",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "9b7d17b0-3e22-4ce1-a494-51f0653fed3a",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "cb716a84-ad3e-4fa7-9d8c-e71348bab8dc",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "635def96-5dcf-4aa9-afc5-8f97f5203974",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "5162d9ce-6793-497f-87b6-6e3b04a42de4",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "c5bcbd6f-7857-4045-bf85-80c3dca6950f",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8a230c9a-9167-472a-99da-f0796c5ea597",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "2e591f25-b22c-4b8e-9174-3bb8d9731450",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c0f26776-d884-406d-9e9d-7a33e0666c9c",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "e21f6ede-d5b2-4d02-ba7c-8e1013c31df5",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "bebe984d-f291-4804-a565-144f07a24362",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "86fae6b0-7130-4301-aa4d-2f017fc44b61",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "bf3c0dc4-15b7-4c16-bd36-43be1a1c5878",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "086217d3-881f-4676-a848-2fb7d7cc907e",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "12bc3146-9b59-402b-8f5f-5bbe104831fe",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "c6600e76-05bb-4640-84a4-b54f2a2dfdfa",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "ce6363ba-ebdb-44f5-b827-7a54a3631ee2",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7703b9ed-3375-4ff0-b374-7464161ebc32",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "e3f823c7-7dcc-4c99-abc7-00edef862334",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0a456804-6da2-4910-8181-866340fd040f",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ff1a7b4f-ac8f-4298-b438-8e2a2ad60dba",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d3649f10-00aa-424a-b0db-70106eaf64e4",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b8be8324-b969-4019-afbb-f908bf365c88",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a00a5c8c-5fa6-4f81-9700-4f1e8e0bc0d7",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5f00a5db-22e2-4571-8ca6-5ec8a0c12cba",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "f107ca1e-f53a-4fcc-903f-7593c250eff5",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a244efa1-6cc1-4fe5-a641-95dfcaad1fe2",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0f890293-26c3-4482-b6e3-e96023df9469",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f00e9359-b5d9-45ce-b734-51fad1e07207",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e061b5c5-ae7b-441b-b7f6-805f2aae64ef",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "753b31dc-78ce-4dd7-bc7d-369b9dd6dd92",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "8d09cd16-498e-4578-befd-150a18e26b13",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "170c5a1c-fd44-414c-a312-2307c7f849ca",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "81154378-e097-4035-9c76-0ce816d7f0ae",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "a6e0f7f3-6932-4b7d-a6a6-b8b6d68d1378",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "5d08dae0-37dc-4ffc-ad3f-f8d922193f7f",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "16de2daf-4ed0-45a3-81cd-86cb6d7bd8de",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1a2de480-4f5c-43ee-812f-45c02cd0c2c3",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "1c0d22b7-e935-43a8-814c-279168bd4cb9",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "a32cc665-b53a-41cb-90f2-b410d93c89f1",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-address-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "bc101431-07aa-4821-a3e0-db15589bdd1a",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "da5a4390-3b72-4778-95df-15fb2f76fe37",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "5a1c3490-4b38-4294-86a7-19d6e57a5515",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "43f25d8c-237c-4fe0-8415-3bb5fbd86604",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper", "oidc-address-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper" ]
      }
    }, {
      "id" : "b1365a0f-394f-4151-bbdf-88c05e6c4a4f",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "e77c341b-64b2-4fe4-9ff7-f0bd50f47a89",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "be2daff8-06ba-47a0-87fe-583432fb23a8",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "3d312901-a22c-4828-a61c-e2d1c021ede6",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "2ee509c9-744b-4d80-a490-e2d579944e27" ],
        "secret" : [ "anlnyjn361hG8teWFzumrw" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "9c17efa9-7691-4e8e-9565-292f690583b2",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "303feb3a-fab7-4451-8553-8583020e026d" ],
        "secret" : [ "uLFEpoT9LnvDdaTm-eSDgyAMh-w4JjxRgbvvFAxO8SDg3RZzQ14nCltsYLOzdnJyCqMsUoBQXyjKcGGIwgh8ipk888osuPwESsY6P8kl3WoE6dIGi0C0QFeFa0tBpwq-ShMsbTa82b13HGlS7l6Hw5NTWT6IqGHHTnjXHHW44Vw" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "0c0869ee-5db6-475a-98a6-1971c7985afd",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEA0PR6ccpYjLFKJ4/iv1MxMjgzzCm+LCDXMow1I8mcNzYVh2kvSQyLO6ryh4HXxSszGwGC2N3nfkXopgO5g+6OKAu83CIjuevp2tinbit8be4ikChDrRJH2P/xec2bHXoy8x0p8pTkYySBw477sh3YuhCzSgLrgmnXvGhNSGnEX8UmBrdXal1CknQ1N50Jdm9jtC+bqqMNFJ4FSGsGpASV78s6jtdhal7sHPnCGcE0FxMRwJBVQK99/QyeCVnDrKfcSYs3CbpVv+I5pDqiTvKAHgxmf/S/f9RNqYlWYWcJlQ1EWt5661EiFXFeMmuENb7vMzXZtMf7bicTvwfw4worFwIDAQABAoIBABDWcnty47nKm4AenxXtvTwfvUTJZFKn/s9K7wlIOLdWO1vjBPVs9ldDijGTK/DubzrQ31tcXkgVmA6wpCVWdswRThGrCpfzw69n3+4HwQoWs2BMbk+m9nUtAqdfAw3YB/0BL50llFXM3kwE3JFYyFsN93SSUan7n2/GM9wO8c0Jr6NYE4SkxNR7BAVDVREty5IAHr9iOBhRo5UQbxY0eSpHQdEbSulfN7LAaPNngoTli2TQZbhvhlc/lrG0pwCIAGU9+LmyOfRJseMwCy9OpL/aAmAZC87cTBKUPc81AqJQWyGEnISkHTnbNdPz8Bg81ya7t6pV2b7wOKnRXk0gpUECgYEA7DZR0EiMREIIfdOZbGvWf0OtxjRTcXoiF7/55sx5XHVwlrEJb+fqIiNX/sk8t4JffqJTrvzZ7XcvvBvv1FA+8CGJPZ5NMmLZl/pqqel13l5n0G0frFRZIfbQHt2ld82Y2N8BS1ZnsDkHcTgJzntINJItyNum3r/SxfiB/apq6eECgYEA4nWdkomWwE06lhMK6tHvlDjfQjeVxwL2SQVc5xgu6K5ZFZKdB9MdC2s0g2JVkN9Z1QcTXuq5XM9zykHLC8JBzmFiln807F34xX4XNiMuMgli15uDZd+1ZKm9gynXrps+1Sq6bVPTr4YCTM55XRs5b9oLldB5xSTnAq9NRriA4/cCgYEAv0j91/3oGR6gYcUJaZOqkETuZKPbLvoIwdLlPNI5NXalRmL3kXftUtfsWpf8Y19gldw+iGaa1ILAVUUKYpTZYvzFdvDK8xK5wyk3V4GHwhwRVegIzjVAORD2WQiFBw+nx3hQRAIk1cBZFoaa6mtLfcci7JVz/M66kTc9jX6ENgECgYEAnEeEnXrcEQt60dSEZTbJuiVhVUYc08Eki5Hq4gQbYzHmgm+ydJLpaVbrX3v+BsNMMCn44TjlALqdcsfiwtOlLDKioa9Zq4DSTCBPDmpK1/cIQjis/iHbAYPuJ9U5ZeL3Ao7BJu+Bl5DIh465zFocUidMdW/wiO+FiKHHl3V+ZVMCgYBotfo3a8Kx0lQ8NnBS8rwfmYXL0xmXZTnnU8cnxjWJKBUvhxqDut7fYKfbCyeqCOnf9mcL8Y2dl3ShpeylcCnVO5dg7dlZbhWxfQ+k38BE8AAmH2nEdc3XqRECB4AQKVfHq60KklQLaV9s0hKJl7BYzcFlfUNdhGCPFmrzE20mFw==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICmTCCAYECBgGZt+yv6TANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVjYWxtYTAeFw0yNTEwMDYwNTA3NDZaFw0zNTEwMDYwNTA5MjZaMBAxDjAMBgNVBAMMBWNhbG1hMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0PR6ccpYjLFKJ4/iv1MxMjgzzCm+LCDXMow1I8mcNzYVh2kvSQyLO6ryh4HXxSszGwGC2N3nfkXopgO5g+6OKAu83CIjuevp2tinbit8be4ikChDrRJH2P/xec2bHXoy8x0p8pTkYySBw477sh3YuhCzSgLrgmnXvGhNSGnEX8UmBrdXal1CknQ1N50Jdm9jtC+bqqMNFJ4FSGsGpASV78s6jtdhal7sHPnCGcE0FxMRwJBVQK99/QyeCVnDrKfcSYs3CbpVv+I5pDqiTvKAHgxmf/S/f9RNqYlWYWcJlQ1EWt5661EiFXFeMmuENb7vMzXZtMf7bicTvwfw4worFwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA7rD5vxWJsn+tpxb9Sj1CZPqagWuwuZG11BTYPJ5lTSymPnNrFJfx95kG+5E4jlo6HmmDaJBmzkVPG4jYkTZ0i6gTn/2gdC/LOBnX8x99nXi6CiDalcDqPgMivQ9eVGqKIObypyImpg6/sKN1S8IJIAZaZ8NjcuUQrQj9ca7GmpwtqS7LaJYprssvfmM9iFOmJa5LEaMgZzWpjVcXFN1loXdbey2+y7jCVygvMXlgp+dkXU4O4bIxOcaYoMYXhB1ze7zdpoVv8goavHe4nqXJh9UYq+Tr21n8GUqF3tXl/sjkscFj2R+wvjgyN5M2iXpRZNRmNp09+DMJFBerNEffe" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "81d0c5f2-b2cf-4675-bfa6-896f2e90b225",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAwKGXBXQF0S9jshK1wmxPEhY1y+RUvVFepAD8HFDfUOoXIvNyjOOavP66bDPxntBvYKoK78o6i1DIyXlkXtP4exkxQeELcazAyMgElBoHTHi+1kERJCv3EHvFZWoJN7bUeACeBEfv7Y37ZwXn4h4cwC1xgLzRUlorTIWwLgFWzav3wdTsdA+2vcSsMAxoGya4RkFU/zh1Rju9D1mhNJ5ujggfC29iF1Hy+ssHDo4LICnURIpxg01bGa/01wRw4gAlTHYMmOQCP8tN1wVsTxmSdrNacSNbmCddzlEJuMtws9NIr+7RQrFFgd0XH5J8++UwMx22K2xQJNMuyRz21h3AZQIDAQABAoIBABzOnYfcfbk2gc2B1EouydVd2m4zJ4QHXOSgXBN8+aR/WXXp28XbjMq6OlVPoFDcgWd+jnOlNcObUWel3n966iQ4lH/yYHR/vfXYyax/Rvul6/4dDWvwIjrGE7NSm+3HyvbmOrtPqb8IFmJmBPMxByIrOZfjxNbwspx3Oq1qmFlZ3S3fsTUaTJNmXwlE9ayLwrE2yi9EKDOtpjTpC92RKqFx8LkOmiYueQ9dpflDyztgQwUB0ep/+GWFcbBeMDORIyqI3vmmCC3ngrbZXl8enUzYEKHq01GTOPgyPw/rofZPLp1fQWYO3hChM6rE+RqiS1DWeuFZfNOF4vgYk0AyB8ECgYEA+V2fPU3k9r535cqcVtYZaGhLm6y4X1BMlOf8p5TrmDlmJv1WqY8CeGj+wKYZXp2Q3nTfJKmtoycStY/+I4tcsnyrrCS68lEneaKXWnv+cToo468V1mtqiyZutDBU5H23wHRiKNz1xim+MJw85/TxsdQUnuTVQdarX8UeMZrB20ECgYEAxcGPnw0asBJX1QbMBPrby2DUj2QVYnPCozZRKwBm9WyQTqGhItJ9RlHc2kc14w0+uSpiFH5PTYvY9aYX3BmAUSGjU5G/huzxlh7CyRldI2fTc5q8cVUUXUkiEVq1QL6OmD/jilgaiJJDru+c657ED2omCICnGjCYOzT7oiolECUCgYA9WO4DC/XHSkZ+7uCVcGihyf7H1q8pK70baRM8OyPWuFBMSUkXv8oQy2vZA0P8hfEM+V2oTGIeYE93AWy5W+C7PHaTjBm94X8/qmNn7FdFjdRfZ0SNErIMd7EGfVl1OQSKwVcgzHNehAh5Nwa43gbUA+Pqz0szvlc84WazN2p3wQKBgHaT3suPLv5+sT3iKnmd9idYM3yblZsIMKBvFHKFdjcZVtpfXmCj+EwvEA+ufWhc68xZ1p/VMTYdcgWyB0KJ5ABB/E5C6aY884uBfGjbFZcCTa9XDEGks2ZQUOY5Ds/4s0YloQm2VIqpsX323ZAHDib0DkQw6IHyu4Vc+rm9LaYlAoGBAOzq1uA3uxLHB8zdHpSJ8B+qkr4hBdHWGrtcoZeNVfQV1ckY6z/u0+J6g81oPIWG5ymeAjTb4ur0EIlPYFowt1K/5WSLee27iEtXem3+thP0zLVkglibQRL1oRaRGlvxfkcFkTNuYiQfBMOd+cli8+PX1HucPgEaOqJ7tN22M188" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICmTCCAYECBgGZt+yvqTANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVjYWxtYTAeFw0yNTEwMDYwNTA3NDZaFw0zNTEwMDYwNTA5MjZaMBAxDjAMBgNVBAMMBWNhbG1hMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwKGXBXQF0S9jshK1wmxPEhY1y+RUvVFepAD8HFDfUOoXIvNyjOOavP66bDPxntBvYKoK78o6i1DIyXlkXtP4exkxQeELcazAyMgElBoHTHi+1kERJCv3EHvFZWoJN7bUeACeBEfv7Y37ZwXn4h4cwC1xgLzRUlorTIWwLgFWzav3wdTsdA+2vcSsMAxoGya4RkFU/zh1Rju9D1mhNJ5ujggfC29iF1Hy+ssHDo4LICnURIpxg01bGa/01wRw4gAlTHYMmOQCP8tN1wVsTxmSdrNacSNbmCddzlEJuMtws9NIr+7RQrFFgd0XH5J8++UwMx22K2xQJNMuyRz21h3AZQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCrGqnMc6CBs+bQUXPDqCZoiMsvIX7+2ulmb1mbQ3PbPbA/9VgZseh69huDzUz8JbnHg/3v/YGYCWQ8tnL18gJSpP6Y0ygZ2bIC9/jsjF8OSK3jEBbJGPoLXtGLEQKyBC73taOTzh6UVbVjHPGs8Vhouge4deNrc/mrfl/DCC5MZ5QgBFc9aAXOZ+ePP8BjNLLJCVYRuJOCbCavp5F/2CcQ28S2ujCEytn9Cds9sdOkeSkFtahStiQ7QO7InRCQi6eDXoIkDGspD5F41j90YyCytDgPaAA48WqevP3yhOb1i9S/kRm59LsUh3Gvw6MjILkd9/7g2tPCXgdEPMVL+CJu" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "authenticationFlows" : [ {
    "id" : "7fbe7cbb-2e97-48ff-9b74-664cca106edb",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5be3b255-6667-49ab-89c1-8bc314508804",
    "alias" : "Browser - Conditional 2FA",
    "description" : "Flow to determine if any 2FA is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "browser-conditional-credential",
      "authenticator" : "conditional-credential",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "webauthn-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-recovery-authn-code-form",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8b8c3084-c5f6-478a-974e-eb3fa0875d24",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e35cf63f-bcc1-4467-ac71-103bdec0bc70",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5228fa1b-e493-416f-892d-4447274c78f5",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fb41675a-3ee3-4e08-ae82-d86b9fcd58e0",
    "alias" : "First broker login - Conditional 2FA",
    "description" : "Flow to determine if any 2FA is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "first-broker-login-conditional-credential",
      "authenticator" : "conditional-credential",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "webauthn-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-recovery-authn-code-form",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "835a75f1-b79c-47e4-8d0d-39e89240acc4",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "179b305c-4cb5-4e3a-adaf-583628a0756f",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "55894823-1d7d-4d21-afb7-f7d0d50d7ce4",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "68ea2f8d-6d5b-4893-92de-a213ed7884d0",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9d13ab98-b20d-44c3-9978-e2548a659029",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional 2FA",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9a9366fc-81ac-497e-baab-b228498c2886",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "acead908-612e-4ccf-bb07-39f97eecdf64",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "83bb02b1-def0-45c2-b046-9a3152c52160",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f82b6f6a-b675-4b31-8099-a4f8a2915a76",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c494ac47-03dc-4276-8acf-471ef0e029d9",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 60,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "55f19d36-a11c-4aaf-9d2f-9a7e87112358",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional 2FA",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fe16bc3e-f362-4785-8a0f-15ce702b0070",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7f79a391-ee1e-4a92-9acd-641b0ea9d1d1",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a5dbf279-9f16-4ffa-926e-c428b01d65df",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8f4fc35a-1c18-4929-9604-78fec1d4784e",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "23c46b65-b58d-4a53-80e3-3ff726188c55",
    "alias" : "browser-conditional-credential",
    "config" : {
      "credentials" : "webauthn-passwordless"
    }
  }, {
    "id" : "d5832a28-7cd5-4659-afdf-a4feb8b85253",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "8f96675f-bea2-4699-a939-6413a448e645",
    "alias" : "first-broker-login-conditional-credential",
    "config" : {
      "credentials" : "webauthn-passwordless"
    }
  }, {
    "id" : "cf006c9a-3349-4f4e-89a9-143dd576d504",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "UPDATE_EMAIL",
    "name" : "Update Email",
    "providerId" : "UPDATE_EMAIL",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 110,
    "config" : { }
  }, {
    "alias" : "idp_link",
    "name" : "Linking Identity Provider",
    "providerId" : "idp_link",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 120,
    "config" : { }
  }, {
    "alias" : "CONFIGURE_RECOVERY_AUTHN_CODES",
    "name" : "Recovery Authentication Codes",
    "providerId" : "CONFIGURE_RECOVERY_AUTHN_CODES",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 130,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "clientOfflineSessionMaxLifespan" : "0",
    "clientSessionIdleTimeout" : "0",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "26.4.0",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}